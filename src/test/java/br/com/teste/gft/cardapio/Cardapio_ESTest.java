/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 25 21:01:40 GMT 2020
 */

package br.com.teste.gft.cardapio;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.teste.gft.cardapio.Cardapio;
import br.com.teste.gft.cardapio.OpcoaoCardapio;
import br.com.teste.gft.enuns.PeriodoEnum;
import br.com.teste.gft.enuns.TipoDePratoEnum;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cardapio_ESTest extends Cardapio_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      boolean boolean0 = cardapio0.equals(cardapio0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<TipoDePratoEnum> linkedList1 = new LinkedList<TipoDePratoEnum>();
      Cardapio cardapio0 = new Cardapio(linkedList0, linkedList1, (List<PeriodoEnum>) null);
      List<TipoDePratoEnum> list0 = cardapio0.getTipos();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<TipoDePratoEnum> linkedList0 = new LinkedList<TipoDePratoEnum>();
      TipoDePratoEnum tipoDePratoEnum0 = TipoDePratoEnum.BEBIDA;
      linkedList0.add(tipoDePratoEnum0);
      Cardapio cardapio0 = new Cardapio((List<OpcoaoCardapio>) null, linkedList0, (List<PeriodoEnum>) null);
      List<TipoDePratoEnum> list0 = cardapio0.getTipos();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<PeriodoEnum> linkedList1 = new LinkedList<PeriodoEnum>();
      Cardapio cardapio0 = new Cardapio(linkedList0, (List<TipoDePratoEnum>) null, linkedList1);
      List<PeriodoEnum> list0 = cardapio0.getPeriodos();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<TipoDePratoEnum> linkedList1 = new LinkedList<TipoDePratoEnum>();
      LinkedList<PeriodoEnum> linkedList2 = new LinkedList<PeriodoEnum>();
      Cardapio cardapio0 = new Cardapio(linkedList0, linkedList1, linkedList2);
      PeriodoEnum periodoEnum0 = PeriodoEnum.MANHA;
      linkedList2.add(periodoEnum0);
      List<PeriodoEnum> list0 = cardapio0.getPeriodos();
      assertTrue(list0.contains(periodoEnum0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      cardapio0.setOpcoes(linkedList0);
      List<OpcoaoCardapio> list0 = cardapio0.getOpcoes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<PeriodoEnum> linkedList1 = new LinkedList<PeriodoEnum>();
      Cardapio cardapio0 = new Cardapio(linkedList0, (List<TipoDePratoEnum>) null, linkedList1);
      OpcoaoCardapio opcoaoCardapio0 = new OpcoaoCardapio();
      linkedList0.offerFirst(opcoaoCardapio0);
      List<OpcoaoCardapio> list0 = cardapio0.getOpcoes();
      assertTrue(list0.contains(opcoaoCardapio0));
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      boolean boolean0 = cardapio0.canEqual(cardapio0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      TipoDePratoEnum tipoDePratoEnum0 = TipoDePratoEnum.ENTRADA;
      PeriodoEnum periodoEnum0 = PeriodoEnum.NOITE;
      OpcoaoCardapio opcoaoCardapio0 = new OpcoaoCardapio("ek_Oa", tipoDePratoEnum0, periodoEnum0);
      boolean boolean0 = cardapio0.canEqual(opcoaoCardapio0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      List<TipoDePratoEnum> list0 = cardapio0.getTipos();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      List<OpcoaoCardapio> list0 = cardapio0.getOpcoes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      List<PeriodoEnum> list0 = cardapio0.getPeriodos();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<TipoDePratoEnum> linkedList0 = new LinkedList<TipoDePratoEnum>();
      LinkedList<PeriodoEnum> linkedList1 = new LinkedList<PeriodoEnum>();
      Cardapio cardapio0 = new Cardapio((List<OpcoaoCardapio>) null, linkedList0, linkedList1);
      Cardapio cardapio1 = new Cardapio((List<OpcoaoCardapio>) null, linkedList0, linkedList1);
      boolean boolean0 = cardapio0.equals(cardapio1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      LinkedList<PeriodoEnum> linkedList0 = new LinkedList<PeriodoEnum>();
      cardapio0.setPeriodos(linkedList0);
      Cardapio cardapio1 = new Cardapio();
      boolean boolean0 = cardapio1.equals(cardapio0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<TipoDePratoEnum> linkedList0 = new LinkedList<TipoDePratoEnum>();
      LinkedList<PeriodoEnum> linkedList1 = new LinkedList<PeriodoEnum>();
      Cardapio cardapio0 = new Cardapio((List<OpcoaoCardapio>) null, linkedList0, linkedList1);
      Cardapio cardapio1 = new Cardapio();
      boolean boolean0 = cardapio0.equals(cardapio1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<TipoDePratoEnum> linkedList1 = new LinkedList<TipoDePratoEnum>();
      Cardapio cardapio0 = new Cardapio(linkedList0, linkedList1, (List<PeriodoEnum>) null);
      Cardapio cardapio1 = new Cardapio(linkedList0, linkedList1, (List<PeriodoEnum>) null);
      boolean boolean0 = cardapio0.equals(cardapio1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      Cardapio.CardapioBuilder cardapio_CardapioBuilder0 = new Cardapio.CardapioBuilder();
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      Cardapio.CardapioBuilder cardapio_CardapioBuilder1 = cardapio_CardapioBuilder0.opcoes(linkedList0);
      Cardapio cardapio1 = cardapio_CardapioBuilder1.build();
      boolean boolean0 = cardapio0.equals(cardapio1);
      assertFalse(boolean0);
      assertFalse(cardapio1.equals((Object)cardapio0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<TipoDePratoEnum> linkedList1 = new LinkedList<TipoDePratoEnum>();
      Cardapio cardapio0 = new Cardapio();
      Cardapio cardapio1 = new Cardapio(linkedList0, linkedList1, (List<PeriodoEnum>) null);
      boolean boolean0 = cardapio1.equals(cardapio0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<TipoDePratoEnum> linkedList0 = new LinkedList<TipoDePratoEnum>();
      LinkedList<PeriodoEnum> linkedList1 = new LinkedList<PeriodoEnum>();
      Cardapio cardapio0 = new Cardapio((List<OpcoaoCardapio>) null, linkedList0, linkedList1);
      Cardapio.CardapioBuilder cardapio_CardapioBuilder0 = new Cardapio.CardapioBuilder();
      boolean boolean0 = cardapio0.equals(cardapio_CardapioBuilder0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      LinkedList<PeriodoEnum> linkedList0 = new LinkedList<PeriodoEnum>();
      cardapio0.setPeriodos(linkedList0);
      Cardapio cardapio1 = new Cardapio();
      boolean boolean0 = cardapio0.equals(cardapio1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<OpcoaoCardapio> linkedList0 = new LinkedList<OpcoaoCardapio>();
      LinkedList<TipoDePratoEnum> linkedList1 = new LinkedList<TipoDePratoEnum>();
      Cardapio cardapio0 = new Cardapio(linkedList0, linkedList1, (List<PeriodoEnum>) null);
      cardapio0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      String string0 = cardapio0.toString();
      assertEquals("Cardapio(opcoes=null, tipos=null, periodos=null)", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<TipoDePratoEnum> linkedList0 = new LinkedList<TipoDePratoEnum>();
      Cardapio cardapio0 = new Cardapio();
      cardapio0.setTipos(linkedList0);
      Cardapio cardapio1 = new Cardapio();
      boolean boolean0 = cardapio1.equals(cardapio0);
      assertFalse(cardapio0.equals((Object)cardapio1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Cardapio cardapio0 = new Cardapio();
      LinkedList<PeriodoEnum> linkedList0 = new LinkedList<PeriodoEnum>();
      cardapio0.setPeriodos(linkedList0);
      cardapio0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<PeriodoEnum> linkedList0 = new LinkedList<PeriodoEnum>();
      Cardapio.CardapioBuilder cardapio_CardapioBuilder0 = Cardapio.builder();
      Cardapio.CardapioBuilder cardapio_CardapioBuilder1 = cardapio_CardapioBuilder0.periodos(linkedList0);
      assertSame(cardapio_CardapioBuilder1, cardapio_CardapioBuilder0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<TipoDePratoEnum> linkedList0 = new LinkedList<TipoDePratoEnum>();
      Cardapio.CardapioBuilder cardapio_CardapioBuilder0 = Cardapio.builder();
      Cardapio.CardapioBuilder cardapio_CardapioBuilder1 = cardapio_CardapioBuilder0.tipos(linkedList0);
      assertSame(cardapio_CardapioBuilder0, cardapio_CardapioBuilder1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Cardapio.CardapioBuilder cardapio_CardapioBuilder0 = new Cardapio.CardapioBuilder();
      String string0 = cardapio_CardapioBuilder0.toString();
      assertEquals("Cardapio.CardapioBuilder(opcoes=null, tipos=null, periodos=null)", string0);
  }
}
